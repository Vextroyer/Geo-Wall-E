On this file some syntax rules are described for G#.

Rules
1- Constants cant be redeclared. Therefore any instruccion that associates identifiers to values(create variables) must be checked to enforce this rule.
2- Constants cant be assigned an empty expression.
3- A variable cant be declared twice on the same scope.
4- Variables must be declared before being used.
5- Only drawable elements can be drawn.
6- Boolean operators return 1 if true and 0 if false.
7- Unary minus operator can only be applied to numbers.
8- Operands for operators : `^` `*` `/` `%` `+` `-` `<` `<=` `>` `>=` must be numbers.
9- Cannot apply more than once the relational operators `<` `<=` `>` `>=` `==` `!=`
10- Both branches of an if-then-else expression must have the same return type.
11- A function declaration is illegal when:
    -A constant exist with the same name on the actual or any parent scope. Derived from rule # 1
    -An argument exist with the same name on the actual scope. Derived from rule # 3.
    -A function exist with the same name and same arity on the actual scope. Extension of rule # 3.
12- Operations on a RuntimeDefined element:
    -yield a RuntimeDefined element except when operated with an undefined element,which yield undefined.